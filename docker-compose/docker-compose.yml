version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../data/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"

  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-securepassword}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-app}
    volumes:
      - ../data/mongodb:/data/db
    networks:
      - backend

  backend:
    image: ${IMAGE_PATH}/backend:latest
    container_name: backend
    restart: unless-stopped
    environment:
      # Server Configuration
      - NODE_ENV=production
      - PORT=3000
      
      # Database Configuration
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-securepassword}@mongodb:27017/${MONGO_DATABASE:-app}?authSource=admin
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      
      # Email Configuration
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      
      # API URLs (use protocol from environment)
      - API_URL=${PROTOCOL}://${DOMAIN}/api
      - FRONTEND_URL=${PROTOCOL}://${DOMAIN}
      
      # Discord Notifications
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
    depends_on:
      - mongodb
    networks:
      - web
      - backend
    labels:
      - "traefik.enable=true"
      # Common configurations
      - "traefik.http.middlewares.backend-strip.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      # HTTP router
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.middlewares=backend-strip"

  frontend:
    image: ${IMAGE_PATH}/frontend:latest
    container_name: frontend
    restart: unless-stopped
    environment:
      # API Configuration (use protocol from environment)
      - VITE_API_URL=${PROTOCOL}://${DOMAIN}/api
      - VITE_PUBLIC_URL=${PROTOCOL}://${DOMAIN}
      - VITE_APP_NAME=${APP_NAME:-Task Manager}
    depends_on:
      - backend
    networks:
      - web
    labels:
      - "traefik.enable=true"
      # Frontend services configuration
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # HTTP router
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=web"

networks:
  web:
    name: web
    external: false
  backend:
    name: backend
    external: false
